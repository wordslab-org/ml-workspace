import requests
import sys

packages = ["absl-py","aeppl","aesara","aiohttp","aiosignal","alabaster","albumentations","altair","appdirs","arviz","astor","astropy","astunparse","async-timeout","atari-py","atomicwrites","attrs","audioread","autograd","Babel","backcall","beautifulsoup4","bleach","blis","bokeh","branca","bs4","CacheControl","cachetools","catalogue","certifi","cffi","cftime","chardet","charset-normalizer","click","clikit","cloudpickle","cmake","cmdstanpy","colorcet","colorlover","community","confection","cons","contextlib2","convertdate","crashtest","crcmod","cufflinks","cupy-cuda11","cvxopt","cvxpy","cycler","cymem","Cython","daft","dask","datascience","db-dtypes","debugpy","decorator","defusedxml","descartes","dill","distributed","dlib","dm-tree","dnspython","docutils","dopamine-rl","earthengine-api","easydict","ecos","editdistance","","entrypoints","ephem","et-xmlfile","etils","etuples","fa2","fastai","fastcore","fastdownload","fastdtw","fastjsonschema","fastprogress","fastrlock","feather-format","filelock","firebase-admin","fix-yahoo-finance","Flask","flatbuffers","folium","frozenlist","fsspec","future","gast","GDAL","gdown","gensim","geographiclib","geopy","gin-config","glob2","google","google-api-core","google-api-python-client","google-auth","google-auth-httplib2","google-auth-oauthlib","google-cloud-bigquery","google-cloud-bigquery-storage","google-cloud-core","google-cloud-datastore","google-cloud-firestore","google-cloud-language","google-cloud-storage","google-cloud-translate","google-colab","google-crc32c","google-pasta","google-resumable-media","googleapis-common-protos","googledrivedownloader","graphviz","greenlet","grpcio","grpcio-status","gspread","gspread-dataframe","gym","gym-notices","h5py","HeapDict","hijri-converter","holidays","holoviews","html5lib","httpimport","httplib2","httpstan","humanize","hyperopt","idna","imageio","imagesize","imbalanced-learn","imblearn","imgaug","importlib-metadata","importlib-resources","imutils","inflect","intel-openmp","intervaltree","ipykernel","ipython","ipython-genutils","ipython-sql","ipywidgets","itsdangerous","jax","jaxlib","jieba","Jinja2","joblib","jpeg4py","jsonschema","jupyter-client","jupyter-console","jupyter_core","jupyterlab-widgets","kaggle","kapre","keras","Keras-Preprocessing","keras-vis","kiwisolver","korean-lunar-calendar","langcodes","libclang","librosa","lightgbm","llvmlite","lmdb","locket","logical-unification","LunarCalendar","lxml","Markdown","MarkupSafe","marshmallow","matplotlib","matplotlib-venn","miniKanren","missingno","mistune","mizani","mkl","mlxtend","more-itertools","moviepy","mpmath","msgpack","multidict","multipledispatch","multitasking","murmurhash","music21","natsort","nbconvert","nbformat","netCDF4","networkx","nibabel","nltk","notebook","numba","numexpr","numpy","oauth2client","oauthlib","okgrade","opencv-contrib-python","opencv-python","opencv-python-headless","openpyxl","opt-einsum","osqp","packaging","palettable","pandas","pandas-datareader","pandas-gbq","pandas-profiling","pandocfilters","panel","param","parso","partd","pastel","pathlib","pathy","patsy","pep517","pexpect","pickleshare","Pillow","pip-tools","platformdirs","plotly","plotnine","pluggy","pooch","portpicker","prefetch-generator","preshed","prettytable","progressbar2","prometheus-client","promise","prompt-toolkit","prophet","proto-plus","protobuf","psutil","psycopg2","ptyprocess","py","pyarrow","pyasn1","pyasn1-modules","pycocotools","pycparser","pyct","pydantic","pydata-google-auth","pydot","pydot-ng","pydotplus","PyDrive","pyemd","pyerfa","Pygments","PyGObject","pylev","pymc","PyMeeus","pymongo","pymystem3","PyOpenGL","pyparsing","pyrsistent","pysimdjson","pysndfile","PySocks","pystan","pytest","python-apt","python-dateutil","python-louvain","python-slugify","python-utils","pytz","pyviz-comms","PyWavelets","PyYAML","pyzmq","qdldl","qudida","regex","requests","requests-oauthlib","resampy","rpy2","rsa","scikit-image","scikit-learn","scipy","scs","seaborn","Send2Trash","setuptools-git","shapely","six","sklearn-pandas","smart-open","snowballstemmer","sortedcontainers","soundfile","spacy","spacy-legacy","spacy-loggers","Sphinx","sphinxcontrib-serializinghtml","sphinxcontrib-websupport","SQLAlchemy","sqlparse","srsly","statsmodels","sympy","tables","tabulate","tblib","tenacity","tensorboard","tensorboard-data-server","tensorboard-plugin-wit","tensorflow","tensorflow-datasets","tensorflow-estimator","tensorflow-gcs-config","tensorflow-hub","tensorflow-io-gcs-filesystem","tensorflow-metadata","tensorflow-probability","termcolor","terminado","testpath","text-unidecode","textblob","thinc","threadpoolctl","tifffile","toml","tomli","toolz","torch","torchaudio","torchsummary","torchtext","torchvision","tornado","tqdm","traitlets","tweepy","typeguard","typer","typing_extensions","tzlocal","uritemplate","urllib3","vega-datasets","wasabi","wcwidth","webargs","webencodings","Werkzeug","widgetsnbextension","wordcloud","wrapt","xarray","xarray-einstats","xgboost","xlrd","xlwt","yarl","yellowbrick","zict","zipp"]

dependencies = {}
for packname in packages:
    dependencies[packname.lower()] = []
for packname in packages:
    print(packname, file=sys.stderr)
    try:
        json = requests.get(f'https://pypi.org/pypi/{packname}/json').json()
    except Exception:
        print("REQUEST ERROR", file=sys.stderr)
        continue
    if "message" in json:
        print("NOT FOUND", file=sys.stderr)
        continue
    depspecs=json['info']['requires_dist']
    if not depspecs: continue
    for depspec in depspecs:
        depname = depspec.split()[0].lower()
        if not depname in dependencies:
            continue
        dependencies[depname].append(packname)

for depname in sorted(dependencies, key=lambda x: x.lower()):
    print(f"{depname}: {dependencies[depname]}")
